- block:
    - name: 在deploy 节点创建coredns相关目录
      file: path={{ item }} state=directory
      with_items:
      - /opt/kube/kube-system/coredns
    
    # DNS文件中部分参数根据hosts文件设置而定，因此需要用template模块替换参数
    - name: 准备 DNS的部署文件
      template: src={{ item }}.yaml.j2 dest=/opt/kube/kube-system/{{ item }}/{{ item }}.yaml
      with_items:
      - coredns
    
    - name: 获取所有已经创建的POD信息
      command: "{{ bin_dir }}/kubectl get pod --all-namespaces"
      register: pod_info
  delegate_to: "{{ groups.deploy[0] }}"
  run_once: true

- block:
    - name: 创建{{ dns_backend }}部署
      shell: "{{ bin_dir }}/kubectl apply -f /opt/kube/kube-system/{{ dns_backend }}"
      run_once: true
      delegate_to: "{{ groups.deploy[0] }}"
  when: 
  - '"coredns" not in pod_info.stdout'
  - 'dns_install == "yes"'
  ignore_errors: true

- block:
    - name: 在deploy 节点创建metrics-server相关目录
      file: path={{ item }} state=directory
      with_items:
      - /opt/kube/kube-system/metrics-server

    # metrics-server文件中部分参数根据hosts文件设置而定，因此需要用template模块替换参数
    - name: 准备 metrics-server的部署文件
      template: src={{ item }}.yaml.j2 dest=/opt/kube/kube-system/metrics-server/{{ item }}.yaml
      with_items:
      - auth-delegator
      - auth-reader
      - metrics-apiservice
      - metrics-server-deployment
      - metrics-server-service
      - resource-reader
    - name: 创建 metrics-server部署
      shell: "{{ bin_dir }}/kubectl apply -f /opt/kube/kube-system/metrics-server"
  run_once: true
  delegate_to: "{{ groups.deploy[0] }}"
  when: '"metrics-server" not in pod_info.stdout and metricsserver_install == "yes"'
  ignore_errors: true

- block:
    - name: 在deploy 节点创建metrics-server相关目录
      file: path={{ item }} state=directory
      with_items:
      - /opt/kube/kube-system/dashboard

    # metrics-server文件中部分参数根据hosts文件设置而定，因此需要用template模块替换参数
    - name: 准备 dashboard的部署文件
      template: src={{ item }}.yaml.j2 dest=/opt/kube/kube-system/dashboard/{{ item }}.yaml
      with_items:
      - admin-user-binding
      - admin-user-sa-rbac
      - kubernetes-dashboard
      - read-user-sa-rbac
      - ui-admin-rbac
      - ui-read-rbac
    - name: 创建 dashboard部署
      shell: "{{ bin_dir }}/kubectl apply -f /opt/kube/kube-system/dashboard"
  delegate_to: "{{ groups.deploy[0] }}"
  run_once: true
  when: '"kubernetes-dashboard" not in pod_info.stdout and dashboard_install == "yes"'
  ignore_errors: true

- import_tasks: ingress.yml
  when: '"ingress-controller" not in pod_info.stdout and ingress_install == "yes"'

- block:
    - name: 在deploy 节点创建相关目录
      file: path={{ item }} state=directory
      with_items:
      - /opt/kube/kube-system/heapster
    - name: 准备heapster influxdb grafana的部署文件
      template: src={{ item }}.yaml.j2 dest=/opt/kube/kube-system/heapster/{{ item }}.yaml
      with_items:
      - heapster
      - grafana
      - influxdb
    - name: 创建 heapster部署
      shell: "{{ bin_dir }}/kubectl apply -f /opt/kube/kube-system/heapster"
  delegate_to: "{{ groups.deploy[0] }}"
  run_once: true
  when: '"heapster" not in pod_info.stdout and heapster_install == "yes"'
  ignore_errors: true
